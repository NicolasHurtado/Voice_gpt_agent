[tool.poetry]
name = "voice-enabled-gpt-agent"
version = "1.0.0"
description = "Voice-enabled GPT Agent with FastAPI and OpenAI"
authors = ["Voice Agent Team <team@voiceagent.dev>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
# Core Framework
fastapi = {extras = ["standard"], version = "^0.104.1"}
uvicorn = {extras = ["standard"], version = "^0.24.0"}

# AI Integration
openai = "^1.3.5"

# Audio Processing
speechrecognition = "^3.10.0"
pydub = "^0.25.1"
python-multipart = "^0.0.6"
soundfile = "^0.12.1"
numpy = "^1.25.2"
imageio-ffmpeg = "^0.4.9"

# WebSocket Support
websockets = "^12.0"

# Database
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
aiosqlite = "^0.19.0"

# Configuration Management
python-decouple = "^3.8"
pydantic-settings = "^2.1.0"

# Async HTTP Client
httpx = "^0.25.2"
aiofiles = "^23.2.1"

# Logging and Monitoring
structlog = "^23.2.0"

# System utilities
psutil = "^5.9.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"

# Code Quality
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.1"
ruff = "^0.1.6"

# Pre-commit hooks
pre-commit = "^3.5.0"

[tool.poetry.group.local]
optional = true

[tool.poetry.group.local.dependencies]
# Local AI model support
torch = "^2.1.0"

[tool.poetry.scripts]
voice-agent = "app.main:app"
voice-agent-dev = "run:main"

# FastAPI CLI support
[tool.fastapi]
app = "app.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==================== TOOL CONFIGURATIONS ====================

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line-length = 88
known_first_party = ["app", "tests"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "W", "F", "I"]
ignore = ["E501"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config --cov=app --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async",
    "unit: Unit tests",
    "integration: Integration tests",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true